rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /Communities/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /Post/{document} {
      allow create: if request.auth != null;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /User_profile/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /User_profile/{parent}/Friends/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /{path=**}/Friends/{document} {
      allow read: if request.auth != null;
    }


    match /User_profile/{parent}/Communitymember/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth.uid == parent;
      allow delete: if false;
    }

    match /{path=**}/Communitymember/{document} {
      allow read: if request.auth != null;
    }


    match /Post/{parent}/Comment/{document} {
      allow create: if request.auth != null;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /{path=**}/Comment/{document} {
      allow read: if true;
    }


    match /User_profile/{parent}/usertags/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if false;
    }

    match /User_profile/{parent}/notificationuser/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if false;
    }

    match /Post/{parent}/multipleimagepost/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/multipleimagepost/{document} {
      allow read: if true;
    }


    match /Post/{parent}/commentreplies/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/commentreplies/{document} {
      allow read: if true;
    }


    match /chats/{document} {
      allow create: if /databases/$(database)/documents/User_profile/$(request.auth.uid) in request.resource.data.users;
      allow read: if /databases/$(database)/documents/User_profile/$(request.auth.uid) in resource.data.users;
      allow write: if /databases/$(database)/documents/User_profile/$(request.auth.uid) in resource.data.users;
      allow delete: if false;
    }

    match /chat_messages/{document} {
      allow create: if /databases/$(database)/documents/User_profile/$(request.auth.uid) in get(request.resource.data.chat).data.users
&& /databases/$(database)/documents/User_profile/$(request.auth.uid) == request.resource.data.user;
      allow read: if /databases/$(database)/documents/User_profile/$(request.auth.uid) in get(resource.data.chat).data.users;
      allow write: if false;
      allow delete: if false;
    }

    match /ff_user_push_notifications/{id} {
      allow read, update, delete: if false;
      allow create: if /databases/$(database)/documents/User_profile/$(request.auth.uid) == request.resource.data.sender;
    }
  }
}
